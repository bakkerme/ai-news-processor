{
  "post_id": "1lmni3q",
  "fetched_at": "2025-06-29T11:05:44.00280535+10:00",
  "comments": [
    {
      "id": "n08uz23",
      "body": "None, it's quite easy to make your own.",
      "parent_id": "t3_1lmni3q",
      "author": "Asleep-Ratio7535",
      "score": 32,
      "created": "2025-06-28T14:26:29Z"
    },
    {
      "id": "n08td0h",
      "body": "Used to be a langgraph fan (and still are) but for simpler things strands agents is taking over. The ability to call tools manually before starting the agent is neat, and supports litellm so it can use whatever backend.¬†",
      "parent_id": "t3_1lmni3q",
      "author": "LoSboccacc",
      "score": 28,
      "created": "2025-06-28T14:17:36Z"
    },
    {
      "id": "n09gwso",
      "body": "Using langgraph \u0026amp; I hate it.üëç",
      "parent_id": "t3_1lmni3q",
      "author": "RubSomeJSOnIt",
      "score": 6,
      "created": "2025-06-28T16:22:47Z"
    },
    {
      "id": "n098b4x",
      "body": "Semantic kernel [msdn](https://learn.microsoft.com/en-us/semantic-kernel/overview/)",
      "parent_id": "t3_1lmni3q",
      "author": "helltiger",
      "score": 3,
      "created": "2025-06-28T15:37:18Z"
    },
    {
      "id": "n08xvhu",
      "body": "Using a in-memory state manager and unix philosophy, it is extremely easy to build a agent orchestrator without any frameworks or such\n\n\nAn agent is not an agent if it needs predefined workflow to operate. An agent needs to be able to make decision, based on a given task.¬†\n\n\nWe can adopt unix philosophy by using MCP and A2A. The LLM of the agent only need to decide which tool to run with what input, our orchestrator can then invoke the relevant MCP server. Every next interactions with the LLM, since first one can then be handled with state managed in-memory\n\n\nThings like persistent memory (which is basically RAG with some extra steps), interaction with local system (eg. pty) are not have to be part of the agent or the orchestration logic. They can well be independent MCP servers",
      "parent_id": "t3_1lmni3q",
      "author": "Ok-Pipe-5151",
      "score": 5,
      "created": "2025-06-28T14:42:12Z"
    },
    {
      "id": "n09i8ub",
      "body": "Started with LangChain/LangGraph and switched to PydanticAI - so far so good.",
      "parent_id": "t3_1lmni3q",
      "author": "Eugr",
      "score": 3,
      "created": "2025-06-28T16:29:58Z"
    },
    {
      "id": "n09b47u",
      "body": "Follow up question for all: Did you need to have high GPU compute, high VRAM or both to build + deploy agents. TIA",
      "parent_id": "t3_1lmni3q",
      "author": "false79",
      "score": 2,
      "created": "2025-06-28T15:52:01Z"
    },
    {
      "id": "n09khsg",
      "body": "I am mostly using Google Adk haven't expored others. ADK gave a good web ui and basic structure to build agents¬†",
      "parent_id": "t3_1lmni3q",
      "author": "Remarkable_Bill4823",
      "score": 2,
      "created": "2025-06-28T16:42:03Z"
    },
    {
      "id": "n0abfnz",
      "body": "This is for production.\n\nI started with PydanticAI, it‚Äôs simple but has a lot of flaws, things change every few versions and still in beta. If you are going to use local/ self hosted llm, good luck. \n\nLangchain and langgraph however, even tho their docs are bad and not as good as pydantic AI, it‚Äôs the most stable production ready framework and things actually works. Their ecosystem is bigger and there are more features.",
      "parent_id": "t3_1lmni3q",
      "author": "Initial_Track6190",
      "score": 2,
      "created": "2025-06-28T19:01:00Z"
    },
    {
      "id": "n08yj7l",
      "body": "Initially 'raw' llama-index (their react agent was/is super ez and powerfull) and python, then autogen with custom nodes in comfy ui (not sure if you can still find the SALT node set, they went commercial.. and deleted their repo) and then autogen2.0 standalone in c#.\n\nNow brewing my own. \n\nBackend in C++, glaze, curl to do all rest calls to openrouter or ollama, custom tools which are build with little shared core tech; cdp and existing scripting language as base for most tools, also makes it ez to whip up new tools quickly.\nUsing my daily web-browser with cdp for all kinds of input, output and ofcourse searching and crawling.\nit's so satisfying to see that custom  controlled browser go brrrrrr, and having modals popping up asking for my input when it needs it.\nFinally a pure html+CSS+js front end (thank you Gemini) connects over websocket to the backend(had that anyway for cdp) to run,edit and create workflows which mainly consist of a stack of agents. No fancy node logic.\n\nAbsolutely not recommending.. only if you are one of those purist 'I want to do it all myself', to learn and to have fun.. I am having a blast. :D \n\nAll api's are going so fast that I want to be in control over what I need quick and what I don't want at all. Relying on a third party to integrate it in their stack which I am using is always to slow and often a gamble in case of stable and consistent functionality. Llama index was sort of ok, autogen had great potential but was a pure versioning hell to me and still in flux so hard. \n\nLangchain would be the one I would use in a self hosted manner if I was not node.js- and docker- tired and didn't enjoy coding myself.",
      "parent_id": "t3_1lmni3q",
      "author": "LetterFair6479",
      "score": 3,
      "created": "2025-06-28T14:45:45Z"
    },
    {
      "id": "n08yuqj",
      "body": "Framework Laptop 13 ;) jk\n\nI really need to dig into agents.",
      "parent_id": "t3_1lmni3q",
      "author": "silenceimpaired",
      "score": 5,
      "created": "2025-06-28T14:47:27Z"
    },
    {
      "id": "n09ehjf",
      "body": "PydanticAI is my favorite, it's lightweight and efficient, meshes well with my strict typing mindset, and completely avoids the cruft and churn of LangChain, while still offering graph semantics if you want them. LangGraph is good and it's probably the most popular framework. CrewAI is a neat concept and worth a look!",
      "parent_id": "t3_1lmni3q",
      "author": "Transcendence",
      "score": 2,
      "created": "2025-06-28T16:09:53Z"
    },
    {
      "id": "n08zv9i",
      "body": "mcp-agent is just simple enough to get the job done without a ton of complexity. I think as others have said, you don‚Äôt really need a framework but this one is fairly decent.\n\nhttps://github.com/lastmile-ai/mcp-agent",
      "parent_id": "t3_1lmni3q",
      "author": "DAlmighty",
      "score": 1,
      "created": "2025-06-28T14:52:52Z"
    },
    {
      "id": "n09hrpy",
      "body": "New to this , recently figured out defining your own agents is much easier , even found custom tool making is better than using pre-defined ones , but when it comes to rag I think autogen is best and crewai is very bad and langchain rag is good too.",
      "parent_id": "t3_1lmni3q",
      "author": "mocker_jks",
      "score": 1,
      "created": "2025-06-28T16:27:24Z"
    },
    {
      "id": "n09k2nt",
      "body": "rmcp + [swiftide](https://swiftide.rs/) if you're using rust.",
      "parent_id": "t3_1lmni3q",
      "author": "chub79",
      "score": 1,
      "created": "2025-06-28T16:39:48Z"
    },
    {
      "id": "n09ssz4",
      "body": "npcpy¬†\ngithub.com/npc-worldwide/npcpy\nlanggraph feel a bit too much for me and i wanted a simpler way to use and build agentic systems",
      "parent_id": "t3_1lmni3q",
      "author": "BidWestern1056",
      "score": 1,
      "created": "2025-06-28T17:24:44Z"
    },
    {
      "id": "n09vcqw",
      "body": "I've been using autogen and am happy with it. I haven't tried  ag2 which is the original creators of autogen.",
      "parent_id": "t3_1lmni3q",
      "author": "Demonicated",
      "score": 1,
      "created": "2025-06-28T17:37:40Z"
    },
    {
      "id": "n0a5kvo",
      "body": "I'm looking into adk and flowise personally. Just tons of reading but with deepwiki and gitingest it's quite a good ride",
      "parent_id": "t3_1lmni3q",
      "author": "218-69",
      "score": 1,
      "created": "2025-06-28T18:30:11Z"
    },
    {
      "id": "n0balt3",
      "body": "[https://github.com/The-Pocket/PocketFlow](https://github.com/The-Pocket/PocketFlow)",
      "parent_id": "t3_1lmni3q",
      "author": "Strong_Sympathy9955",
      "score": 1,
      "created": "2025-06-28T22:14:54Z"
    },
    {
      "id": "n0bt3j4",
      "body": "I built my own in Rust.\n\nAlready had an AI agent framework before LLMs were a thing.\n\nIt was for video games and trading.",
      "parent_id": "t3_1lmni3q",
      "author": "OmarBessa",
      "score": 1,
      "created": "2025-06-29T00:06:42Z"
    },
    {
      "id": "n08zoz7",
      "body": "I build custom frameworks and combine them with other AI models. The LLMs themselves are usually run in Ollama because its easy to use their API in python scripts.",
      "parent_id": "t3_1lmni3q",
      "author": "swagonflyyyy",
      "score": 1,
      "created": "2025-06-28T14:51:57Z"
    },
    {
      "id": "n090lku",
      "body": "Used to work with langgraph and crewai , switched over to pydantic AI and google ADK .\nAlso prototyping with HF smolagents.",
      "parent_id": "t3_1lmni3q",
      "author": "Daemontatox",
      "score": 1,
      "created": "2025-06-28T14:56:47Z"
    },
    {
      "id": "n0928ea",
      "body": "Try this one [https://github.com/themanojdesai/python-a2a](https://github.com/themanojdesai/python-a2a)",
      "parent_id": "t3_1lmni3q",
      "author": "meatyminus",
      "score": 0,
      "created": "2025-06-28T15:05:27Z"
    }
  ],
  "raw_api_url": "/comments/1lmni3q"
}